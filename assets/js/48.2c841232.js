(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{324:function(e,o,t){"use strict";t.r(o);var n=t(4),s=Object(n.a)({},function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"控制台"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#控制台","aria-hidden":"true"}},[e._v("#")]),e._v(" 控制台")]),e._v(" "),t("p",[t("strong",[e._v("讲解控制台面板的详细使用")])]),e._v(" "),t("h2",{attrs:{id:"快捷键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快捷键","aria-hidden":"true"}},[e._v("#")]),e._v(" 快捷键")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ctrl + l")]),e._v(" 控制台清屏,也可调用 "),t("code",[e._v("clear()")]),e._v(" api")])]),e._v(" "),t("h2",{attrs:{id:"杂项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#杂项","aria-hidden":"true"}},[e._v("#")]),e._v(" 杂项")]),e._v(" "),t("h3",{attrs:{id:"消息显示模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息显示模式","aria-hidden":"true"}},[e._v("#")]),e._v(" 消息显示模式")]),e._v(" "),t("p",[e._v("重复消息会只显示一次，但是会利用序号标识出现次数\n如果觉得不好可以按 F1 将控制台显示变为时间戳模式\n**提示：**利用该模式可以测算程序执行时间差，最小精度到 ms")]),e._v(" "),t("h3",{attrs:{id:"控制台显示过滤功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#控制台显示过滤功能","aria-hidden":"true"}},[e._v("#")]),e._v(" 控制台显示过滤功能")]),e._v(" "),t("p",[e._v("再额外的设置中可能有用的功能")]),e._v(" "),t("ol",[t("li",[e._v("打印 xmlhttp 请求")]),e._v(" "),t("li",[e._v("保留日志在控制台属性后\n3.定制化的控制日志输出\n"),t("a",{attrs:{href:"https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview#heading=h.xuvxhsd2bp05",target:"_blank",rel:"noopener noreferrer"}},[e._v("用户格式的控制台输出"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api","aria-hidden":"true"}},[e._v("#")]),e._v(" API")]),e._v(" "),t("p",[e._v("chrome 在控制台环境包含了大量 API 方便调试。")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("不要再脚本中使用非 console 对象的调试 API，由于调试API 只存在控制台环境，可能在脚本中报错。")])]),e._v(" "),t("h3",{attrs:{id:"dom-访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-访问","aria-hidden":"true"}},[e._v("#")]),e._v(" DOM 访问")]),e._v(" "),t("ol",[t("li",[t("p",[t("strong",[e._v("$0 - $4")]),e._v("\nDOM 对象的快捷引用， "),t("code",[e._v("$0")]),e._v(" 表示最近的 DOM 对象，"),t("code",[e._v("$1")]),e._v(" 表示之前引用的对象。后续值依次类推。注意这个值是在使用 inspect 观察对象时自动记录的。")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("$(selector, startNode)")])]),e._v(" "),t("p",[e._v("该方法是 "),t("code",[e._v("document.querySelector")]),e._v(" 的缩写, "),t("code",[e._v("startNode")]),e._v(" 申明搜索的初始节点，默认为 "),t("code",[e._v("document")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("$$(selector,startNode)")])]),e._v(" "),t("p",[e._v("该方法是 "),t("code",[e._v("document.querySelectorAll")]),e._v(" 的缩写\n"),t("code",[e._v("startNode")]),e._v(" 申明搜索的初始节点，默认为 "),t("code",[e._v("document")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("$x(path, [startNode])")]),e._v("\n支持采用 "),t("code",[e._v("xpath")]),e._v(" 语法搜索节点")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("inspect(fucntion/object)")]),e._v("\n传入函数会跳转到 source 面板，dom 对象会跳转到 element 面板实现快速定位")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("getEventListeners(object)")]),e._v("\n快速返回 dom 元素上的监听事件，多个会返回数组")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("monitorEvents(object[, events])，unmonitorEvents(object[, events])")]),e._v("\n监控，取消对象事件变化监听，events 支持数组，例如  "),t("code",[e._v('monitorEvents(window, ["resize", "scroll"])')]),e._v(" 监控窗口尺寸变化和滚动事件，会在事件触发时打印事件结果，事件列表详见 "),t("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/console/utilities",target:"_blank",rel:"noopener noreferrer"}},[e._v("devtool"),t("OutboundLink")],1)])])]),e._v(" "),t("h3",{attrs:{id:"控制台控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#控制台控制","aria-hidden":"true"}},[e._v("#")]),e._v(" 控制台控制")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("clear()")]),e._v("\n清空控制台，MaC 快捷键为 "),t("code",[e._v("ctrl+l")])]),e._v(" "),t("li",[t("strong",[e._v("copy(object)")]),e._v("\n复制内容")]),e._v(" "),t("li",[t("strong",[e._v("debug(function)，undebug(function)")]),e._v("\n给函数设置，取消断点")]),e._v(" "),t("li",[t("strong",[e._v("dir")]),e._v("\n按照对象风格显示结果，适用于 dom 等复杂对象的输出")]),e._v(" "),t("li",[t("strong",[e._v("monitor(function)，unmonitor(function)")]),e._v("\n设置，取消函数执行监控，当函数被调用时自动打印输入，注意对象输入无法正确打印")]),e._v(" "),t("li",[t("strong",[e._v("queryObjects(Constructor)")]),e._v("\n返回某个构造函数创建的对象，例如 queryObjects(Promise) 返回所有 promise 实例")])]),e._v(" "),t("h3",{attrs:{id:"console"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#console","aria-hidden":"true"}},[e._v("#")]),e._v(" console")]),e._v(" "),t("p",[e._v("console 用于打印信息")]),e._v(" "),t("ol",[t("li",[e._v("console.log() 输出日志信息")])]),e._v(" "),t("p",[e._v("用法举例：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    // 1. 使用逗号输入多个变量，输出空格分隔各变量\n   console.log('hello','world');\n   //  2.\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("console.group() console.groupEnd() 用来将输出分组\n方便在调试时观察信息，使用步骤是\n"),t("ol",[t("li",[e._v("先创建一个组并传入组名 console.group(‘group_name')")]),e._v(" "),t("li",[e._v("在创建的组中输入你的调试信息例如 console.log 等")]),e._v(" "),t("li",[e._v("调用 console.gruopEnd() 结束该输出组，其中支持嵌套操作。")])])])]),e._v(" "),t("p",[e._v("用法举例：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    //1.单层结构\n    console.group('group1');\n    console.log('hello');\n    console.groupEnd();\n\n    //2.嵌套结构\n    console.group('group1');\n    console.log('hello');\n        console.group('group2');\n        console.log('world');\n        console.groupEnd();\n    console.groupEnd();\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("console.groupCollapsed()\n该函数用来折叠组或输出使用方法有两种\n"),t("ol",[t("li",[e._v("一般配合 console.group() 来折叠组")]),e._v(" "),t("li",[e._v("直接使用它来生成组，此时多次调用会使输出形成嵌套，利用\nconsole.groupEnd() 结束嵌套。")])])])]),e._v(" "),t("p",[e._v("用法举例：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    //1.配合组使用\n    console.groupCollapsed('group1');\n    console.group('group1');\n    console.log('hello');\n    console.groupEnd();\n    //2.单独使用\n    console.groupCollapsed('group1')\n    console.log('hello');\n            console.groupCollapsed('group2');\n            console.log('world');\n            console.groupEnd();\n    console.groupEnd();\n")])])]),t("p",[e._v("总结 console.group() 和 console.Collapsed() 其实都是用来\n标记输出的，使用区别在于前者展开显示后者折叠显示，多次调用会形成\n嵌套所以需要 console.groupEnd() 来结束嵌套。")]),e._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[e._v("console.error() 显示错误")])]),e._v(" "),t("p",[e._v("用法举例：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    // 1. 支持输入格式\n   console.error("Error: %s (%i)", "Server is  not responding",500);\n   //  2.\n')])])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("console.warn() 显示警告")])]),e._v(" "),t("p",[e._v("用法举例：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    // 1. 支持输入格式\n   console.warn('Warning! Too few nodes (%d)', 2);\n   //  2.\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[e._v("console.assert() 显示断言\n用法举例：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    // 1. 支持输入格式\n    var a= [1,2,3,4]\n    console.assert(a.length < 3, "Node count is > 3");\n')])])]),t("ol",{attrs:{start:"6"}},[t("li",[e._v("console.dir() 显示 JS")])]),e._v(" "),t("p",[e._v("举例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("console.dir(document);\n")])])]),t("ol",{attrs:{start:"7"}},[t("li",[e._v("格式化输出\n在前面所讲的以字符串作为输入的输出指令中，chrome 支持如下的输出模式")])]),e._v(" "),t("ul",[t("li",[t("em",[e._v("%s:")]),e._v(" 格式化字符串")]),e._v(" "),t("li",[t("em",[e._v("%i or %I:")]),e._v(" 格式化变量为整形")]),e._v(" "),t("li",[t("em",[e._v("%f:")]),e._v(" 格式化变量为浮点")]),e._v(" "),t("li",[t("em",[e._v("%o:")]),e._v(" 格式化变量为DOM 结构")]),e._v(" "),t("li",[t("em",[e._v("%O:")]),e._v(" 格式化变量为js 对象")]),e._v(" "),t("li",[t("em",[e._v("%c:")]),e._v(" 运用 CSS 规则格式化输出")])]),e._v(" "),t("p",[e._v("举例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    //1.输出字符串和数字\n    console.log("%s has %d points", "Sam", 100);\n    //2. CSS 格式化输出\n    console.group("%cThis will be formatted with large, blue text", "color: blue; font-size: x-large;border:1px red solid;background:black;border-radius:100px");\n    //3. 输出 DOM 结构\n    body_ele= document.getElementsByTagName(\'body\');\n    console.log(\'%o\',a);\n    //4. 输出 JS 对象\n    console.log(\'%O\',document);\n')])])]),t("p",[e._v("总结：使用 %o 和 %O 的意义在于可以随时监控你所需要的 DOM 对象，在变化后自动在\n控制台打出")]),e._v(" "),t("ol",{attrs:{start:"8"}},[t("li",[e._v("console.table() 输出数组\n举例如下：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    //1.直接输出数组\n    var matrix = [{col1:12,col2:23}];\n    console.table(matrix);\n\n    //2.选择需要输出内容\n    function Person(firstName, lastName, age) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.age = age;\n    }\n\n    var family = {};\n    family.mother = new Person("Susan", "Doyle", 32);\n    family.father = new Person("John", "Doyle", 33);\n    family.daughter = new Person("Lily", "Doyle", 5);\n    family.son = new Person("Mike", "Doyle", 8);\n\n    console.table(family, ["firstName", "lastName"]);\n')])])]),t("ol",{attrs:{start:"9"}},[t("li",[e._v("console.time(),console.timeEnd()\n用来测试函数时间结果，举例如下：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    //1.必须加标注来指示执行结果。\n    console.time("Array initialize");\n    var array= new Array(1000000);\n    for (var i = array.length - 1; i >= 0; i--) {\n       array[i] = new Object();\n    };\n    console.timeEnd("Array initialize");\n')])])]),t("h3",{attrs:{id:"杂项-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#杂项-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 杂项")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("keys(object),values(object)")]),e._v("\n返回键和值，效果类似 "),t("code",[e._v("Object.keys，Object.values")])]),e._v(" "),t("li",[t("strong",[e._v("table(data,[columns])")]),e._v("\n按照表格显示数据，方便查看返回结果，"),t("code",[e._v("columns")]),e._v(" 显示特定列")])]),e._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/debug/console/console-reference#consoletraceobject",target:"_blank",rel:"noopener noreferrer"}},[e._v("console API 详解"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/debug/command-line/command-line-reference?hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("控制台 API"),t("OutboundLink")],1)])])])},[],!1,null,null,null);o.default=s.exports}}]);