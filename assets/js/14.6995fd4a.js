(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{290:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json","aria-hidden":"true"}},[t._v("#")]),t._v(" json")]),t._v(" "),a("p",[a("strong",[t._v("json 格式及使用")])]),t._v(" "),a("h2",{attrs:{id:"为什么需要-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-json","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么需要 json")]),t._v(" "),a("p",[t._v("讨论如下引用场景，家中的智能设备将状态上报给微信上的 webapp 显示。\n设备端利用 socket 进行状态的上报，服务端采用"),a("br"),t._v("\na 是一个智能设备它会将每小时温度的数据存储为如下结构体。由于设备使用的是 C 语言数据结构如下:")]),t._v(" "),a("div",{staticClass:"language-c++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   typeof struct deviceTmp{  \n       int  tmpTime[],   //温度的变化的时间戳\n       int  tmpData[]    //对应各时间戳的温度\n   } \n")])])]),a("p",[t._v("假设传输方式为字符串模式，利用 socket 将消息发给了 node 的服务端处理，由于 node 采用的是 js\n它需要把上述消息转变为如下格式。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("   deviceTemp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    tmpTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    tmpData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("p",[t._v("如果 node 服务器还需要使用 http 将消息发给 php 服务器保存历史数据。则 php\n服务器希望数据格式如下:")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[t._v("      deviceTemp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("aray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"tmpTime"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"tmpData"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("我们来看一下整个消息的处理过程")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("设备 --编码结构体为字符串--\x3e node服务器 --\n--\x3e node 解码字符串 --编码字符串传给 php --\x3e php 解码字符串处理\n")])])]),a("p",[t._v("数据本身为两个数组，由于设备，node 服务器，php 服务器采用不同的语言，所以在语法表征\n相同数据结构时会存在差异。如何保证字符串在传送的过程中无需自定义加解码格式。")]),t._v(" "),a("h2",{attrs:{id:"json-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-是什么","aria-hidden":"true"}},[t._v("#")]),t._v(" json 是什么")]),t._v(" "),a("p",[t._v("理解了上面的问题可以看出 json 是一种编码方式，规定了如何利用文本来表征不同的数据结构。\n所以我们所说的 json 对象更具体来说是如何使用文本模式来表征对象(它只能表征数据对象属性并不能表征方法)。")]),t._v(" "),a("p",[t._v("json 的灵感来自 js 的对象字面量语法。采用键值对的方式来表示数据结构。\n支持的基本数据类型包括"),a("code",[t._v("数值、字符串、数组,键值对结构")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只支持 10 进制")]),t._v("\n   jsonNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12"')]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return  12")]),t._v("\n   \n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//支持 unicode 字符集和转义字符字符串内容用双引号")]),t._v("\n   jsonStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"dfdf\\n\\u4e00\"'")]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {‘dfdf")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   一'}\"")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//支持多维数组                ")]),t._v("\n   jsonArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[1,2,3]"')]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1,2,3]     ")]),t._v("\n   \n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//键名必须为字符串用双引号")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{} 中定义键值对，内部支持基本类型和嵌套结构")]),t._v("\n   jsonKeyValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{\"key\":12}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonKeyValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1,2,3]       ")]),t._v("\n   \n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意简直对字符串中的两次转义")]),t._v("\n   jsonKeyValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"key":"\\\\nvalue\\\\u4e00"}\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonKeyValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1,2,3]                                      ")]),t._v("\n")])])])])},[],!1,null,null,null);s.default=e.exports}}]);